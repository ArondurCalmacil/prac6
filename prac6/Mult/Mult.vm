// Mult.vm
// Calculates a = x * y
// a is a local variable
// x & y are static variables

// Put your code here.

function MultWithSigns.main 0
  // Initialize a to 0
  push constant 0
  pop local 0  // a = 0

  // Determine the sign of x and y
  push static 0  // Load x
  lt
  if-goto X_IS_NEGATIVE
  goto X_NOT_NEGATIVE

  label X_IS_NEGATIVE
  // Negate x and set the x_negative flag
  neg
  push constant 1
  not
  pop static 2  // x_negative = true
  goto X_SIGN_DONE

  label X_NOT_NEGATIVE
  push constant 0
  pop static 2  // x_negative = false

  label X_SIGN_DONE

  push static 1  // Load y
  lt
  if-goto Y_IS_NEGATIVE
  goto Y_NOT_NEGATIVE

  label Y_IS_NEGATIVE
  // Negate y and set the y_negative flag
  neg
  push constant 1
  not
  pop static 3  // y_negative = true
  goto Y_SIGN_DONE

  label Y_NOT_NEGATIVE
  push constant 0
  pop static 3  // y_negative = false

  label Y_SIGN_DONE

  // Loop to perform multiplication
  label LOOP_START
  // Check if y is equal to 0
  push static 1  // Load y
  push constant 0
  eq
  if-goto END

  // If y is not equal to 0, perform one step of the multiplication
  push static 0  // Load x
  push local 0  // Load a
  add
  pop local 0  // a = a + x

  // Decrement y by 1
  push static 1  // Load y
  push constant 1
  sub
  pop static 1  // y = y - 1

  goto LOOP_START

  // Handle signs of the result
  label END
  push static 2  // Load x_negative
  push static 3  // Load y_negative
  eq
  if-goto SAME_SIGNS

  // Signs are different; negate the result
  push local 0
  neg
  pop local 0

  label SAME_SIGNS

  // The result is in local variable a
  // End of the program
  label END
  goto END
